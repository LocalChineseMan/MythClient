package notthatuwu.xyz.mythrecode.modules.exploit;

import java.util.ArrayList;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C00PacketKeepAlive;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C0FPacketConfirmTransaction;
import net.minecraft.network.play.client.C13PacketPlayerAbilities;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;
import notthatuwu.xyz.mythrecode.Client;
import notthatuwu.xyz.mythrecode.api.event.EventTarget;
import notthatuwu.xyz.mythrecode.api.module.Category;
import notthatuwu.xyz.mythrecode.api.module.Module;
import notthatuwu.xyz.mythrecode.api.module.Module.Info;
import notthatuwu.xyz.mythrecode.api.module.ModuleManager;
import notthatuwu.xyz.mythrecode.api.module.settings.impl.ModeSetting;
import notthatuwu.xyz.mythrecode.api.module.settings.impl.NumberSetting;
import notthatuwu.xyz.mythrecode.api.utils.ChatUtil;
import notthatuwu.xyz.mythrecode.api.utils.TimeHelper;
import notthatuwu.xyz.mythrecode.api.utils.server.PacketUtil;
import notthatuwu.xyz.mythrecode.events.EventReceivePacket;
import notthatuwu.xyz.mythrecode.events.EventSendPacket;
import notthatuwu.xyz.mythrecode.events.EventUpdate;
import notthatuwu.xyz.mythrecode.modules.movement.Fly;

@Info(name = "Disabler", category = Category.EXPLOIT)
public class Disabler extends Module {
  public ModeSetting mode = new ModeSetting("Mode", this, new String[] { "Watchdog", "Vulcan Combat", "Minebox", "HazelMC", "HazelMC2", "BattleAsya", "Blink", "Cubecraft", "Hycraft Test", "Funny" }, "Vulcan Combat");
  
  public NumberSetting ticks = new NumberSetting("Ticks", this, 2.0D, 1.0D, 10.0D, true, () -> Boolean.valueOf(this.mode.is("Blink")));
  
  private boolean messageSent;
  
  private boolean ihavekids;
  
  private boolean inmybasement;
  
  private ArrayList<Packet> packet = new ArrayList<>();
  
  private ArrayList<Packet> packet2 = new ArrayList<>();
  
  private TimeHelper timeHelper = new TimeHelper();
  
  @EventTarget
  public void onUpdate(EventUpdate event) {
    setSuffix(this.mode.getValue());
    switch (this.mode.getValue()) {
      case "Funny":
        PacketUtil.sendFunnyPacket();
        break;
      case "Watchdog":
        if (mc.thePlayer.ticksExisted < 5 && this.ihavekids) {
          ChatUtil.sendChatMessageWPrefix("Stop shitting watchdog");
          this.messageSent = false;
          this.ihavekids = false;
        } 
        if (mc.thePlayer.ticksExisted <= 100) {
          this.inmybasement = true;
          break;
        } 
        if (!this.messageSent) {
          ChatUtil.sendChatMessageWPrefix("Stop sexing watchdog");
          this.timeHelper.reset();
        } 
        this.inmybasement = false;
        this.messageSent = true;
        if (!this.packet.isEmpty() && this.timeHelper.hasReached(2000L)) {
          this.packet.forEach(p -> mc.thePlayer.sendQueue.sendPacketNoEvent(p));
          this.packet.clear();
          ChatUtil.sendChatMessageWPrefix("Send 1");
        } 
        if (!this.packet2.isEmpty()) {
          this.packet2.forEach(p -> mc.thePlayer.sendQueue.sendPacketNoEvent(p));
          this.packet2.clear();
          ChatUtil.sendChatMessageWPrefix("Send 2");
        } 
        break;
      case "Minebox":
        if (this.timeHelper.hasReached((long)(4000.0D + Math.random() + 1000.0D)) && 
          !this.packet.isEmpty()) {
          this.packet.forEach(p -> mc.thePlayer.sendQueue.sendPacketNoEvent(p));
          this.packet.clear();
          this.timeHelper.reset();
        } 
        break;
    } 
  }
  
  @EventTarget
  public void onSendPacket(EventSendPacket event) {
    switch (this.mode.getValue()) {
      case "Cubecraft":
        if (event.getPacket() instanceof net.minecraft.network.play.client.C0APacketAnimation) {
          this.packet2.add(event.getPacket());
          event.setCancelled(true);
        } 
        if (event.getPacket() instanceof C0FPacketConfirmTransaction && !this.packet2.isEmpty()) {
          Packet toSend = this.packet2.get(0);
          PacketUtil.sendPacketNoEvent(toSend);
          this.packet2.remove(toSend);
        } 
        break;
      case "Blink":
        if (event.getPacket() instanceof C03PacketPlayer && 
          mc.thePlayer.ticksExisted % this.ticks.getValueInt() == 0)
          event.setCancelled(true); 
        break;
      case "Vulcan Combat":
        if (event.getPacket() instanceof C0FPacketConfirmTransaction) {
          event.setCancelled(true);
          mc.thePlayer.sendQueue.sendPacketNoEventDelayed(event.getPacket(), 9000L);
        } 
        break;
      case "HazelMC2":
        this;
        if (mc.thePlayer.ticksExisted < 30)
          return; 
        if (event.getPacket() instanceof C00PacketKeepAlive) {
          this;
          if (mc.thePlayer.ticksExisted % 3 == 1)
            event.setCancelled(true); 
        } 
        if (event.getPacket() instanceof C13PacketPlayerAbilities) {
          C13PacketPlayerAbilities packet = (C13PacketPlayerAbilities)event.getPacket();
          packet.setAllowFlying(true);
          packet.setCreativeMode(true);
          packet.setInvulnerable(true);
          packet.setFlying(true);
        } 
        if (ModuleManager.getModuleByName("Fly").isEnabled() && 
          event.getPacket() instanceof C03PacketPlayer) {
          C03PacketPlayer c03 = (C03PacketPlayer)event.getPacket();
          if (mc.thePlayer.ticksExisted % 35 == 0) {
            C03PacketPlayer c03PacketPlayer = (C03PacketPlayer)event.getPacket();
            c03PacketPlayer.y = 0.015625D;
          } 
          this;
          if (mc.thePlayer != null) {
            this;
            if (mc.thePlayer.ticksExisted % 25 == 0 && event.getPacket() instanceof C03PacketPlayer) {
              C03PacketPlayer C3PO = (C03PacketPlayer)event.getPacket();
              C3PO.y = -0.014D;
              C3PO.x = -0.013D;
            } 
          } 
        } 
        break;
      case "HazelMC":
        this;
        if (mc.thePlayer.ticksExisted < 30)
          return; 
        if (event.getPacket() instanceof C00PacketKeepAlive) {
          this;
          if (mc.thePlayer.ticksExisted % 3 == 1)
            event.setCancelled(true); 
        } 
        if (event.getPacket() instanceof C03PacketPlayer && !this.timeHelper.hasReached(1000L))
          PacketUtil.sendPacketSilent((Packet)new C00PacketKeepAlive(4)); 
        if (event.getPacket() instanceof C13PacketPlayerAbilities) {
          C13PacketPlayerAbilities packet2 = (C13PacketPlayerAbilities)event.getPacket();
          packet2.setAllowFlying(true);
          packet2.setCreativeMode(true);
          packet2.setInvulnerable(true);
          packet2.setFlying(true);
          event.setPacket((Packet)packet2);
        } 
        if (event.getPacket() instanceof net.minecraft.network.play.client.C0CPacketInput) {
          event.setPacket((Packet)new C0FPacketConfirmTransaction());
          if (mc.thePlayer.isCollided == true)
            mc.thePlayer.isCollided = false; 
        } 
        if (event.getPacket() instanceof C00PacketKeepAlive) {
          event.setCancelled(true);
          PacketUtil.sendPacketDelayed((Packet)new C00PacketKeepAlive(), 2000L);
        } 
        if (event.getPacket() instanceof C0FPacketConfirmTransaction) {
          event.setCancelled(true);
          PacketUtil.sendPacketDelayed((Packet)new C0FPacketConfirmTransaction(), 2000L);
        } 
        if (((Fly)Client.INSTANCE.moduleManager.getModuleByClass(Fly.class)).isEnabled() && 
          event.getPacket() instanceof C03PacketPlayer) {
          C03PacketPlayer c03 = (C03PacketPlayer)event.getPacket();
          if (mc.thePlayer.ticksExisted % 15 == 0) {
            C03PacketPlayer c03PacketPlayer = (C03PacketPlayer)event.getPacket();
            c03PacketPlayer.y = 0.015625D;
          } 
        } 
        break;
      case "Minebox":
        if (event.getPacket() instanceof C0FPacketConfirmTransaction) {
          this.packet.add(event.getPacket());
          event.setCancelled(true);
        } 
        break;
      case "Hycraft Test":
        if (event.getPacket() instanceof C00PacketKeepAlive || (event.getPacket() instanceof C0FPacketConfirmTransaction && (getPlayer()).ticksExisted % 3.5D == 0.0D))
          event.setCancelled(true); 
        if (event.getPacket() instanceof net.minecraft.network.play.server.S2APacketParticles)
          event.setCancelled(true); 
        if (event.getPacket() instanceof net.minecraft.network.play.client.C0BPacketEntityAction)
          event.setCancelled(true); 
        if (event.getPacket() instanceof C03PacketPlayer)
          ((C03PacketPlayer)event.getPacket()).onGround = true; 
        break;
      case "Watchdog":
        if ((event.getPacket() instanceof C0FPacketConfirmTransaction || event.getPacket() instanceof C00PacketKeepAlive) && this.inmybasement) {
          ChatUtil.sendChatMessageWPrefix("Disabler - Spoofing C0F packet");
          this.packet.add(event.getPacket());
          event.setCancelled(true);
        } 
        if (event.getPacket() instanceof C03PacketPlayer && this.inmybasement) {
          ChatUtil.sendChatMessageWPrefix("Disabler - Spoofing C03 packet");
          this.packet2.add(event.getPacket());
          event.setCancelled(true);
        } 
        break;
    } 
  }
  
  @EventTarget
  public void onReceivePacket(EventReceivePacket event) {
    switch (this.mode.getValue()) {
      case "Watchdog":
        if (event.getPacket() instanceof S08PacketPlayerPosLook && !this.ihavekids) {
          ((S08PacketPlayerPosLook)event.getPacket()).y++;
          ChatUtil.sendChatMessageWPrefix("Start shitting watchdog");
          this.ihavekids = true;
        } 
        break;
    } 
  }
}
